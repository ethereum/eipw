[workspace]
members = [ "eipw-preamble", "eipw-lint", "eipw-lint-js", "eipw-snippets" ]

[workspace.package]
version = "0.10.0-dev"
edition = "2021"
license = "MPL-2.0"
repository = "https://github.com/ethereum/eipw"
rust-version = "1.80"

[workspace.dependencies]
eipw-snippets = { path = "eipw-snippets", version = "0.2.0-dev" }
eipw-lint = { path = "eipw-lint", version = "0.10.0-dev" }
eipw-preamble = { path = "eipw-preamble", version = "0.3.0-dev" }
tokio = "1.43.0"
serde_json = "1.0.138"
toml = "0.8.19"
serde = "1.0.217"
getrandom = "0.2.15"
regex = "1.11.1"
snafu = "0.8.5"
assert_matches = "1.5.0"
pretty_assertions = "1.4.1"
annotate-snippets = "0.11.5"
chrono = { version = "0.4.39", default-features = false }
clap = "4.5.27"
comrak = { version = "0.35.0", default-features = false }
console_error_panic_hook = "0.1.7"
educe = { version = "0.6.0", default-features = false }
formatx = "0.2.3"
js-sys = "0.3.77"
jsonschema = { version = "0.28.3", default-features = false }
scraper = { version = "0.22.0", default-features = false }
serde-wasm-bindgen = "0.6.5"
sysexits = "0.8.5"
thiserror = "2.0.11"
url = "2.5.4"
wasm-bindgen = "0.2.100"
wasm-bindgen-futures = "0.4.50"
wasm-bindgen-test = "0.3.50"

[package]
name = "eipw"
description = "Ethereum Improvement Proposal linter that's one more than eipv"
version.workspace = true
edition.workspace = true
license.workspace = true
rust-version.workspace = true
repository.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
eipw-snippets.workspace = true
tokio = { workspace = true, features = [ "macros" ] }
eipw-lint = { workspace = true, features = [ "tokio" ] }
serde_json.workspace = true
toml.workspace = true
serde = { workspace = true, features = [ "derive" ] }

sysexits = { workspace = true }
clap = { workspace = true, features = ["derive", "cargo"] }
thiserror = { workspace = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
tokio = { workspace = true, features = [ "macros", "rt" ] }
getrandom = { workspace = true, features = [ "js" ] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { workspace = true, features = [ "fs", "macros", "rt-multi-thread" ] }
