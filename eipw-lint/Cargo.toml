[package]
name = "eipw-lint"
version = "0.10.0-dev"
edition = "2021"
license = "MPL-2.0"
rust-version = "1.80"
repository = "https://github.com/ethereum/eipw"
description = "library of lints for eipw, the Ethereum Improvement Proposal validator"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
eipw-preamble.workspace = true
eipw-snippets.workspace = true
serde_json.workspace = true
snafu.workspace = true
regex.workspace = true
serde = { workspace = true, features = [ "derive" ] }
tokio = { optional = true, workspace = true, features = [ "macros" ] }

comrak = { version = "0.29.0", default-features = false }
url = "2.5.2"
chrono = { version = "0.4.38", default-features = false }
educe = { version = "0.6.0", default-features = false, features = [ "Debug" ] }
scraper = { version = "0.20.0", default-features = false }
jsonschema = { version = "0.21.0", default-features = false }
formatx = "0.2.2"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { workspace = true, features = [ "fs", "macros" ] }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
tokio = { workspace = true, features = [ "fs", "macros", "rt" ] }

[dev-dependencies]
assert_matches.workspace = true
tokio = { workspace = true, features = [ "macros", "rt" ] }
toml.workspace = true
