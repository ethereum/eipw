[package]
name = "eipw-lint"
version.workspace = true
edition.workspace = true
license.workspace = true
rust-version.workspace = true
repository.workspace = true
description = "library of lints for eipw, the Ethereum Improvement Proposal validator"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
schema-version = [ "schemars", "olpc-cjson", "sha3", "semver" ]
backtrace = [ "snafu/backtrace" ]

[dependencies]
eipw-preamble.workspace = true
eipw-snippets.workspace = true
serde_json.workspace = true
snafu.workspace = true
regex.workspace = true
serde = { workspace = true, features = [ "derive" ] }
tokio = { optional = true, workspace = true, features = [ "macros" ] }
figment.workspace = true

comrak = { version = "0.37.0", default-features = false }
url = "2.5.4"
chrono = { version = "0.4.40", default-features = false }
educe = { version = "0.6.0", default-features = false, features = [ "Debug" ] }
scraper = { version = "0.23.1", default-features = false }
jsonschema = { version = "0.29.1", default-features = false }
formatx = "0.2.3"
schemars = { version = "0.8.22", optional = true }
olpc-cjson = { version = "0.1.4", optional = true }
sha3 = { version = "0.10.8", optional = true }
semver = { version = "1.0.26", optional = true, features = ["serde"] }
html2text = "0.14.2"
zspell = "0.5.5"
lazy_static = "1.5.0"
lru = "0.13.0"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { workspace = true, features = [ "fs", "macros" ] }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
tokio = { workspace = true, features = [ "fs", "macros", "rt" ] }

[dev-dependencies]
assert_matches.workspace = true
pretty_assertions.workspace = true
tokio = { workspace = true, features = [ "macros", "rt" ] }
toml.workspace = true
figment = { workspace = true, features = [ "toml" ] }
